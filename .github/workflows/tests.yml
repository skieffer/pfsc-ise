name: tests
on: workflow_dispatch
jobs:
  functional-tests:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    env:
      TEST_TAG: test
      TEST_DEPLOY_DIR: test
      REDIS_URI: redis://localhost:6379
      GRAPHDB_URI: redis://localhost:6381
      PFSC_LIB_ROOT: ${{ format('{0}/lib', github.workspace) }}
      PFSC_BUILD_ROOT: ${{ format('{0}/build', github.workspace) }}
      SECRET_KEY: fixed_value_for_testing
    steps:
      - name: Make directory structure
        run: mkdir -p {lib,build,deploy,src/tmp}
      # -----------------------------------------
      - name: Checkout pfsc-manage
        uses: actions/checkout@v3
        with:
          repository: 'skieffer/pfsc-manage'
          ref: 'selenium'
          path: 'pfsc-manage'
      # -----------------------------------------
      - name: Checkout pfsc-server
        uses: actions/checkout@v3
        with:
          repository: 'proofscape/pfsc-server'
          path: 'src/pfsc-server'
      - name: Workaround defunct check
        working-directory: src/pfsc-server
        run: mkdir venv
      # -----------------------------------------
      - name: Checkout pfsc-ise
        uses: actions/checkout@v3
        with:
          repository: 'proofscape/pfsc-ise'
          path: 'src/pfsc-ise'
      - name: Install node modules for pfsc-ise
        working-directory: src/pfsc-ise
        run: npm install
      - name: Build pfsc-ise
        working-directory: src/pfsc-ise
        run: npm run build:dev
      # -----------------------------------------
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Install pfsc-manage requirements
        working-directory: pfsc-manage
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -e .
          pip install -r dev-requirements.txt
          cp sample_conf.py conf.py
      # -----------------------------------------
      - name: Build pfsc-server docker image
        working-directory: pfsc-manage
        run: |
          source venv/bin/activate
          pfsc build server ${{ env.TEST_TAG }}
      # -----------------------------------------
      - name: Generate a deployment directory
        working-directory: pfsc-manage
        run: |
          source venv/bin/activate
          pfsc deploy generate --gdb re --pfsc-tag ${{ env.TEST_TAG }} \
              --oca-tag ${{ env.TEST_TAG }} -n 1 --demos \
              --dirname ${{ env.TEST_DEPLOY_DIR }} \
              --flask-config dockerdev \
              --mount-code
      # -----------------------------------------
      - name: Install chromedriver
        run: |
          wget https://chromedriver.storage.googleapis.com/107.0.5304.62/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          mv chromedriver /usr/local/bin/
      # -----------------------------------------
      - name: Deploy the containers
        working-directory: deploy/${{ env.TEST_DEPLOY_DIR }}
        run: docker compose -f mca-docker-compose.yml up -d
      # -----------------------------------------
      - name: Run the Selenium tests
        working-directory: pfsc-manage
        run: |
          source venv/bin/activate
          pytest tests/selenium/test_basic_run_01.py
